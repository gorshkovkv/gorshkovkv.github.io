!function() {
    "use strict";
    
    Lampa.SettingsApi.addParam({
        component: "interface",
        param: {
            name: "logo_glav",
            type: "trigger",
            default: true
        },
        field: {
            name: "–õ–æ–≥–æ—Ç–∏–ø—ã –≤–º–µ—Å—Ç–æ –Ω–∞–∑–≤–∞–Ω–∏–π",
            description: "–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –ª–æ–≥–æ—Ç–∏–ø—ã —Ñ–∏–ª—å–º–æ–≤ –≤–º–µ—Å—Ç–æ —Ç–µ–∫—Å—Ç–∞"
        }
    });

    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–µ—Ä–µ–≤–æ–¥–æ–≤
    Lampa.SettingsApi.addParam({
        component: "interface",
        param: {
            name: "logo_translations",
            type: "trigger",
            default: true
        },
        field: {
            name: "–ü–µ—Ä–µ–≤–æ–¥—ã –Ω–∞–∑–≤–∞–Ω–∏–π",
            description: "–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏—è –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —è–∑—ã–∫–∞—Ö –ø–æ–¥ –ª–æ–≥–æ—Ç–∏–ø–æ–º"
        }
    });

    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É –¥–ª—è –∑–∞–º–µ–Ω—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–µ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è
    Lampa.SettingsApi.addParam({
        component: "interface",
        param: {
            name: "logo_missing_desc",
            type: "trigger",
            default: true
        },
        field: {
            name: "–ó–∞–º–µ–Ω–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–µ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è",
            description: "–ó–∞–º–µ–Ω—è—Ç—å –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–µ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –æ–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –¥—Ä—É–≥–æ–º —è–∑—ã–∫–µ"
        }
    });

    if (!window.logoplugin) {
        window.logoplugin = true;
        Lampa.Listener.follow("full", function(e) {
            if (e.type == "complite") {
                var movie = e.data.movie;
                
                async function tryGetLogo(lang) {
                    // –î–ª—è —è–∑—ã–∫–∞ –æ—Ä–∏–≥–∏–Ω–∞–ª–∞ –Ω–µ —É–∫–∞–∑—ã–≤–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä language –≤ URL
                    var url = Lampa.TMDB.api((movie.name ? "tv" : "movie") + "/" + movie.id + "/images?api_key=" + Lampa.TMDB.key() + (lang ? "&language=" + lang : ""));
                    try {
                        const resp = await $.get(url);
                        if (resp.logos && resp.logos[0]) {
                            return resp.logos[0].file_path;
                        }
                    } catch (e) {}
                    return null;
                }

                async function getTitle(lang) {
                    try {
                        const url = Lampa.TMDB.api((movie.name ? "tv" : "movie") + "/" + movie.id + "?api_key=" + Lampa.TMDB.key() + "&language=" + lang);
                        const resp = await $.get(url);
                        return resp.title || resp.name;
                    } catch (e) {
                        return null;
                    }
                }

                async function getDescription(lang) {
                    try {
                        const url = Lampa.TMDB.api((movie.name ? "tv" : "movie") + "/" + movie.id + "?api_key=" + Lampa.TMDB.key() + "&language=" + lang);
                        const resp = await $.get(url);
                        return resp.overview;
                    } catch (e) {
                        return null;
                    }
                }

                async function findLogo() {
                    // –ü–æ–ª—É—á–∞–µ–º –∑–∞—Ä–∞–Ω–µ–µ –≤—Å–µ –Ω–∞–∑–≤–∞–Ω–∏—è –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–æ–≤
                    const ruTitle = await getTitle("ru");
                    const enTitle = await getTitle("en");
                    const origTitle = movie.original_title || movie.original_name;

                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –∑–∞–º–µ–Ω—è–µ–º –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–µ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
                    if (Lampa.Storage.get("logo_missing_desc")) {
                        const currentDesc = movie.overview;
                        if (!currentDesc || currentDesc.trim() === "") {
                            let newDesc = null;
                            if (Lampa.Storage.get("language") === "ru") {
                                newDesc = await getDescription("en");
                                if (!newDesc) newDesc = await getDescription("");
                            } else {
                                newDesc = await getDescription("ru");
                                if (!newDesc) newDesc = await getDescription("");
                            }
                            
                            if (newDesc) {
                                movie.overview = newDesc;
                                // –û–±–Ω–æ–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –≤–æ –≤—Å–µ—Ö –º–µ—Å—Ç–∞—Ö
                                $(".full-start__description").text(newDesc);
                                $(".full-descr__text").text(newDesc);
                            }
                        }
                    }

                    // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –ø–µ—Ä–µ–≤–æ–¥—ã –Ω–∞–∑–≤–∞–Ω–∏–π, –µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞
                    if (Lampa.Storage.get("logo_translations")) {
                        var titlesContainer = $('<div class="title-translations"></div>').css({
                            'margin-top': '10px',
                            'margin-bottom': '15px',
                            'font-size': '0.9em',
                            'opacity': '0.7'
                        });

                        const currentLang = Lampa.Storage.get("language");

                        // –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞–∑–Ω—ã–µ –ø–µ—Ä–µ–≤–æ–¥—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ —è–∑—ã–∫–∞
                        if (currentLang === "ru") {
                            if (enTitle && enTitle !== ruTitle) titlesContainer.append(`<div>üá¨üáß ${enTitle}</div>`);
                            if (origTitle && origTitle !== ruTitle && origTitle !== enTitle) titlesContainer.append(`<div>üåê ${origTitle}</div>`);
                        } else {
                            if (ruTitle && ruTitle !== enTitle) titlesContainer.append(`<div>üá∑üá∫ ${ruTitle}</div>`);
                            if (origTitle && origTitle !== ruTitle && origTitle !== enTitle) titlesContainer.append(`<div>üåê ${origTitle}</div>`);
                        }

                        // –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–≤–æ–¥—ã –ø–æ—Å–ª–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞
                        $(".full-start-new__title").after(titlesContainer);
                    }

                    // –ï—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–æ—Ç–∏–ø–æ–≤, –ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –∏ –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å –ª–æ–≥–æ—Ç–∏–ø
                    if (Lampa.Storage.get("logo_glav")) {
                        // –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –Ω–∞ —Ç–µ–∫—É—â–µ–º —è–∑—ã–∫–µ
                        let path = await tryGetLogo(Lampa.Storage.get("language"));
                        let logoLang = Lampa.Storage.get("language");
                        
                        // –ï—Å–ª–∏ –Ω–µ—Ç –Ω–∞ —Ç–µ–∫—É—â–µ–º —è–∑—ã–∫–µ, –ø—Ä–æ–±—É–µ–º –∞–Ω–≥–ª–∏–π—Å–∫–∏–π
                        if (!path) {
                            path = await tryGetLogo("en");
                            if (path) logoLang = "en";
                        }
                        
                        // –ï—Å–ª–∏ –Ω–µ—Ç –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º, –ø—Ä–æ–±—É–µ–º —è–∑—ã–∫ –æ—Ä–∏–≥–∏–Ω–∞–ª–∞
                        if (!path) {
                            path = await tryGetLogo("");
                            if (path) logoLang = "orig";
                        }

                        if (path) {
                            // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –ª–æ–≥–æ—Ç–∏–ø–∞
                            var imgElement = $('<img style="margin-top: 5px; max-height: 125px; max-width: 100%; width: auto; height: auto; object-fit: contain; display: block;" src="' + Lampa.TMDB.image("/t/p/w300" + path.replace(".svg", ".png")) + '" />');
                            imgElement.on('error', function() {
                                $(".full-start-new__title").html(movie.title || movie.name);
                            });
                            // –ó–∞–º–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ –Ω–∞ –ª–æ–≥–æ—Ç–∏–ø
                            $(".full-start-new__title").html(imgElement);
                        }
                    }
                }

                findLogo();
            }
        });
    }
}();